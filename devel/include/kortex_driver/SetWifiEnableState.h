// Generated by gencpp from file kortex_driver/SetWifiEnableState.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_SETWIFIENABLESTATE_H
#define KORTEX_DRIVER_MESSAGE_SETWIFIENABLESTATE_H

#include <ros/service_traits.h>


#include <kortex_driver/SetWifiEnableStateRequest.h>
#include <kortex_driver/SetWifiEnableStateResponse.h>


namespace kortex_driver
{

struct SetWifiEnableState
{

typedef SetWifiEnableStateRequest Request;
typedef SetWifiEnableStateResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SetWifiEnableState
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::SetWifiEnableState > {
  static const char* value()
  {
    return "7ccd6a6c56b1642433541444d0e2ab2f";
  }

  static const char* value(const ::kortex_driver::SetWifiEnableState&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::SetWifiEnableState > {
  static const char* value()
  {
    return "kortex_driver/SetWifiEnableState";
  }

  static const char* value(const ::kortex_driver::SetWifiEnableState&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::SetWifiEnableStateRequest> should match
// service_traits::MD5Sum< ::kortex_driver::SetWifiEnableState >
template<>
struct MD5Sum< ::kortex_driver::SetWifiEnableStateRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::SetWifiEnableState >::value();
  }
  static const char* value(const ::kortex_driver::SetWifiEnableStateRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::SetWifiEnableStateRequest> should match
// service_traits::DataType< ::kortex_driver::SetWifiEnableState >
template<>
struct DataType< ::kortex_driver::SetWifiEnableStateRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::SetWifiEnableState >::value();
  }
  static const char* value(const ::kortex_driver::SetWifiEnableStateRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::SetWifiEnableStateResponse> should match
// service_traits::MD5Sum< ::kortex_driver::SetWifiEnableState >
template<>
struct MD5Sum< ::kortex_driver::SetWifiEnableStateResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::SetWifiEnableState >::value();
  }
  static const char* value(const ::kortex_driver::SetWifiEnableStateResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::SetWifiEnableStateResponse> should match
// service_traits::DataType< ::kortex_driver::SetWifiEnableState >
template<>
struct DataType< ::kortex_driver::SetWifiEnableStateResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::SetWifiEnableState >::value();
  }
  static const char* value(const ::kortex_driver::SetWifiEnableStateResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_SETWIFIENABLESTATE_H
